using FileUploadDownloadApp.Model;
using Microsoft.AspNetCore.Mvc;
using Renci.SshNet;
using Microsoft.Extensions.Options;

namespace FileUploadDownloadApp.Controllers {
    public class HomeController : Controller {
        private readonly SftpSettings _sftp;

        public HomeController(IOptions<SftpSettings> options) {
            _sftp = options.Value;
        }

        public IActionResult Index() {
            return View();
        }

        public IActionResult Upload() {
            return View();
        }

        [HttpPost]
        public async Task<IActionResult> Upload(FileUploadViewModel model) {
            if (model.File != null && model.File.Length > 0) {
                try {
                    using (var memoryStream = new MemoryStream()) {
                        await model.File.CopyToAsync(memoryStream);
                        memoryStream.Position = 0;

                        using (var client = new SftpClient(_sftp.Host, _sftp.User, _sftp.Password)) {
                            client.Connect();

                            string remotePath = "/home/usrmon/" + model.File.FileName;
                            client.UploadFile(memoryStream, remotePath, true);

                            var exists = client.Exists(remotePath);
                            ViewBag.Message = exists
                                ? "Archivo cargado en SFTP correctamente."
                                : "Error al verificar la carga en SFTP.";

                            client.Disconnect();
                        }
                    }
                } catch (Exception ex) {
                    ViewBag.Message = $"Error durante la carga: {ex.Message}";
                }
            } else {
                ViewBag.Message = "No se seleccionó ningún archivo.";
            }

            return View();
        }
    }
}
